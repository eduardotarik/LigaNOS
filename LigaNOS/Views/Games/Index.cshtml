@model IEnumerable<LigaNOS.Data.Entities.Game>
@using LigaNOS.Data.Entities


@{
    ViewData["Title"] = "Index";
}

<script>
    function confirmStartSeason() {
        if (confirm("Are you sure you want to start the season?")) {
            window.location.href = '@Url.Action("StartSeason", "Games")';
        }
    }

    function confirmEndSeason() {
        if (confirm("Are you sure you want to end the season?")) {
            // If the user confirms, redirect to the EndSeason action
            window.location.href = '@Url.Action("EndSeason", "Games")';
        }
    }
</script>

<div class="games-header-content">
    <h1 class="game-title">List of Games</h1>
    <p class="games-create-button">
        <a asp-action="Create" class="btn btn-success"><i class="fas fa-plus"></i> Create Game</a>
        <button class="btn btn-danger" onclick="confirmEndSeason()"><i class="fas fa-minus"></i> End Season</button>
        <button class="btn btn-primary" onclick="confirmStartSeason()"><i class="fas fa-plus"></i> Start Season</button>
    </p>
</div>

<div class="text-right mb-3">
    <!-- Optional: Other buttons or content aligned to the right -->
</div>

<table id="games" class="table table-bordered table-striped" style="width: 100%">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomeTeam)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AwayTeam)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomeTeamScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AwayTeamScore)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPlayed)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HomeTeamIssuedCard)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AwayTeamIssuedCard)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HomeTeam)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AwayTeam)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.HomeTeamScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AwayTeamScore)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPlayed)
            </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.HomeTeamIssuedCard))
                    {
                        <span class="text-danger">
                            @if (item.HomeTeamIssuedCard == "Red")
                            {
                                <i class="fas fa-square text-danger"></i> <!-- Red card icon -->
                            }
                            else if (item.HomeTeamIssuedCard == "Yellow")
                            {
                                <i class="fas fa-square text-warning"></i> <!-- Yellow card icon -->
                            }
                            else if (item.HomeTeamIssuedCard == "RedYellow")
                            {
                                <i class="fas fa-square text-danger"></i> <!-- Red card icon -->
                                <i class="fas fa-square text-warning"></i> <!-- Yellow card icon -->
                            }
                        </span>
                    }
                </td>
                <td>
                    @if (!string.IsNullOrEmpty(item.HomeTeamIssuedCard))
                    {
                        <span class="text-danger">
                            @if (item.AwayTeamIssuedCard == "Red")
                            {
                                <i class="fas fa-square text-danger"></i> <!-- Red card icon -->
                            }
                            else if (item.AwayTeamIssuedCard == "Yellow")
                            {
                                <i class="fas fa-square text-warning"></i> <!-- Yellow card icon -->
                            }
                            else if (item.AwayTeamIssuedCard == "RedYellow")
                            {
                                <i class="fas fa-square text-danger"></i> <!-- Red card icon -->
                                <i class="fas fa-square text-warning"></i> <!-- Yellow card icon -->
                            }
                        </span>
                    }
                </td>
            <td>
                @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Admin"))
                {
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary"><i class="fa-solid fa-pen-to-square"></i></a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger"><i class="fa fa-trash"></i></a>
                }
                
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info"><i class="fa-solid fa-circle-info"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    
}