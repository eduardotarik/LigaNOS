@model IEnumerable<LigaNOS.Data.Entities.Player>

@{
    ViewData["Title"] = "Index";
}

<div>
    <h1 class="page-title-style">List of Players</h1>
    <p class="players-create-button">
        @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Team") || this.User.IsInRole("Admin"))
        {
            <a asp-action="Create" class="btn btn-primary adjusted-button rounded"><i class="fas fa-plus"></i> Create</a>

        }
    </p>
 </div>

<div class="container">
    <table class="table-footer-gap" id="players">
        <thead>
            <tr>
                <th style="text-align: center;">
                    @Html.DisplayNameFor(model => model.PictureId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Age)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Position)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TeamName)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) 
            {
                <tr>
                    <td>
                        @if (!string.IsNullOrEmpty(item.ImageFullPath))
                        {
                            <div style="width: 100px; height: 100px; overflow: hidden; border-radius: 50%;">
                                <img src="@Url.Content(item.ImageFullPath)" alt="Emblem"
                                     style="display: block; width: 100%; height: 100%; object-fit: cover;" />
                            </div>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Position)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TeamName)
                    </td>
                    <td class="d-flex">
                        @if (this.User.Identity.IsAuthenticated && this.User.IsInRole("Team") || this.User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary rounded adjusted-icon btn-margin-top" style="margin-right: 0px;">
                                <i class="fa-solid fa-pen-to-square"></i></a>
                            <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger rounded custom-button adjusted-icon btn-margin-top" style="padding-right: 10px; margin-left: 0px;">
                                <i class="fa fa-trash"></i></a>
                        }

                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info rounded adjusted-icon btn-margin-top">
                            <i class="fa-solid fa-circle-info"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
